!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=5)}([function(t,e,n){window,t.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},n.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="./dist/",n(n.s=0)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r={create:function(){var t=document,e=t.createDocumentFragment(),n=t.createElement("div"),r=this.zIndex||1e3;n.innerHTML='\n            <div class="toast-container"\n                style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: '+r+'; background-color: rgba(0,0,0,0.5); display: none">\n                <div class="toast-content-container"\n                    style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); -webkit-transform: translate(-50%, -50%);"\n                >\n                    <div id="toastContent" class="toast-content" style="padding: 4px 10px; -webkit-transition: -webkit-transform 500ms ease-out, opacity 500ms ease-out; transition: transform 500ms ease-out, opacity 500ms ease-out; background-color: #000; border-radius: 4px; color: #fff;"\n                    ></div>\n                </div>\n            </div>\n        ',this.toast=n.children[0],e.appendChild(this.toast),t.body.appendChild(e)},setZIndex:function(t){this.zIndex=t,this.toast&&(this.toast.style.zIndex=t)},show:function(t,e){var n=this;this.toast||this.create();var r=this.toast,i=r.ownerDocument,o=i.getElementById("toastContent");o.innerHTML="",o.appendChild(i.createTextNode(t)),this.playShowAnim(o),r.style.display="block",setTimeout(function(){return n.hide()},e||2e3)},playShowAnim:function(t){t.style.transform="translateY(-40px)",t.style.webkitTransform="translateY(-40px)",t.style.opacity=0,setTimeout(function(){t.style.transform="translateY(0px)",t.style.webkitTransform="translateY(0px)",t.style.opacity=1})},hide:function(){var t=this,e=this.toast.ownerDocument.getElementById("toastContent");this.playHideAnim(e);var n=function(){console.log("in after anim"),t.toast.style.display="none"};e.style.transition?this.addOnceEvent(e,"transitionend",n):e.style.webkitTransition?this.addOnceEvent(e,"webkitTransitionEnd",n):n()},addOnceEvent:function(t,e,n){var r=this,i=arguments;t.addEventListener(e,function o(){t.removeEventListener(e,o),n.apply(r,i)})},playHideAnim:function(t){t.style.transform="translateY(10px)",t.style.webkitTransform="translateY(10px)",t.style.opacity=0}};e.default=r}])},function(t,e,n){const r=n(9),i=n(10);t.exports={USpectrumWave:r,USpectrumHeatmap:i}},function(t,e){t.exports=class{constructor(t,e=!1){this.src=t,this.context=new(window.AudioContext||window.webkitAudioContext),this.loaded=!1,this.buffer=null,this.source=null,this.debugState=e,this.startedAt=0,this.offset=0,this.loopState=!1,this.listeners={},this.ownListeners={},this.playing=!1,this.ownEvents=["play","stop","pause","forward","rewind","load","loaded"],this.initSource()}initSource(){this.source=this.context.createBufferSource(),this.source.connect(this.context.destination);const t=Object.keys(this.listeners);t.length&&t.map(t=>{this.log(`Re-add event: ${t}`),this.source.addEventListener(t,this.listeners[t])})}clearSource(){this.source&&(this.playing&&this.source.stop(),this.source.disconnect(),this.initSource())}stop(){this.clearSource(),this.startedAt=0,this.offset=0,this.playing=!1,this.log("Stopped."),"function"==typeof this.ownListeners.stop&&this.ownListeners.stop()}load(t){return t=t||this.src,this.log("Loading",t),"function"==typeof this.ownListeners.load&&this.ownListeners.load(t),this.loaded&&(this.clearSource(),this.loaded=!1),"string"!=typeof t?(this.fetcher=this.context.decodeAudioData(t).then(t=>{this.loaded=!0,this.buffer=t,"function"==typeof this.ownListeners.loaded&&this.ownListeners.loaded()}),this):(this.fetcher=window.fetch(t,{method:"GET",mode:"no-cors"}).then(t=>t.arrayBuffer()).then(t=>this.context.decodeAudioData(t)).then(t=>{this.loaded=!0,this.buffer=t,"function"==typeof this.ownListeners.loaded&&this.ownListeners.loaded()}),this)}getPlayTime(){return this.context.currentTime-this.startedAt+this.offset}play(t){if("suspended"!==this.context.state)return this.loaded?void(this.source.buffer||(this.source.buffer=this.buffer,this.source.loopEnd=this.buffer.duration,this.source.loop=this.loopState,this.startedAt=this.context.currentTime,this.source.start(0,t),this.playing=!0,this.source.addEventListener("ended",()=>this.stop()),this.log("Playing..."),"function"==typeof this.ownListeners.play&&this.ownListeners.play())):(this.log("Waiting for buffer to load..."),void this.fetcher.then(()=>this.play()));this.context.resume()}pause(){this.context.suspend(),this.playing=!1,this.log("Paused."),"function"==typeof this.ownListeners.pause&&this.ownListeners.pause()}loop(t){return this.loopState=t,this.log("Loop:",t?"ON":"OFF"),this.source.loop=t,this}toggleLoop(){return this.loopState=!this.loopState,this.log("Toggle loop:",this.loopState?"ON":"OFF"),this.source.loop=this.loopState,this}forward(t=5){this.log(`>> Forward ${t} seconds`),"function"==typeof this.ownListeners.forward&&this.ownListeners.forward(t);const e=this.getPlayTime();this.offset=e+t,this.offset>this.buffer.duration&&(this.offset=this.buffer.duration-t),this.log("Play @",this.offset),this.clearSource(),this.play(this.offset)}rewind(t=5){this.log(`<< Rewind ${t} seconds`),"function"==typeof this.ownListeners.rewind&&this.ownListeners.rewind(t);const e=this.getPlayTime();this.offset=e-t,this.offset<0&&(this.offset=0),this.log("Play @",this.offset),this.clearSource(),this.play(this.offset)}useKeyboard(t){this.log("Using keyboard.");let e=document.body;return t&&(e=document.querySelector(t)),e.addEventListener("keydown",({key:t})=>{const e={ArrowRight:()=>this.forward(),ArrowLeft:()=>this.rewind(),z:()=>this.stop(),x:()=>this.play(),c:()=>this.pause(),l:()=>this.toggleLoop()}[t];e&&e()}),this}isOwnEvent(t){return this.ownEvents.includes(t)}on(t,e){return this.isOwnEvent(t)?(this.ownListeners[t]=e,this):(this.source.addEventListener(t,e),this.listeners[t]=e,this)}debug(t){return this.debugState=t,this}log(){this.debugState&&console.log("Player:",...arguments)}}},function(t,e,n){t.exports=function(t,e){if("string"==typeof t){var n=t;if(!(t=window.document.querySelector(t)))throw new Error('"'+n+'" does not match any HTML elements')}if(!t)throw new Error('"'+t+'" is not a valid HTML element');"function"==typeof e&&(e={onDrop:e});var a;return t.addEventListener("dragenter",s,!1),t.addEventListener("dragover",f,!1),t.addEventListener("dragleave",u,!1),t.addEventListener("drop",c,!1),function(){l(),t.removeEventListener("dragenter",s,!1),t.removeEventListener("dragover",f,!1),t.removeEventListener("dragleave",u,!1),t.removeEventListener("drop",c,!1)};function s(t){return e.onDragEnter&&e.onDragEnter(t),t.stopPropagation(),t.preventDefault(),!1}function f(n){if(n.stopPropagation(),n.preventDefault(),e.onDragOver&&e.onDragOver(n),n.dataTransfer.items){var r=Array.from(n.dataTransfer.items),i=r.filter(function(t){return"file"===t.kind}),o=r.filter(function(t){return"string"===t.kind});if(0===i.length&&!e.onDropText)return;if(0===o.length&&!e.onDrop)return;if(0===i.length&&0===o.length)return}return t.classList.add("drag"),clearTimeout(a),n.dataTransfer.dropEffect="copy",!1}function u(t){return t.stopPropagation(),t.preventDefault(),e.onDragLeave&&e.onDragLeave(t),clearTimeout(a),a=setTimeout(l,50),!1}function c(t){t.stopPropagation(),t.preventDefault(),e.onDragLeave&&e.onDragLeave(t),clearTimeout(a),l();var n={x:t.clientX,y:t.clientY},s=t.dataTransfer.getData("text");if(s&&e.onDropText&&e.onDropText(s,n),e.onDrop&&t.dataTransfer.items){var f=t.dataTransfer.files,u=Array.from(t.dataTransfer.items).filter(function(t){return"file"===t.kind});if(0===u.length)return;i(u.map(function(t){return function(e){!function(t,e){var n=[];if(t.isFile)t.file(function(n){n.fullPath=t.fullPath,n.isFile=!0,n.isDirectory=!1,e(null,n)},function(t){e(t)});else if(t.isDirectory){var r=t.createReader();!function a(){r.readEntries(function(r){r.length>0?(n=n.concat(Array.from(r)),a()):i(n.map(function(t){return function(e){o(t,e)}}),function(n,r){n?e(n):(r.push({fullPath:t.fullPath,name:t.name,isFile:!1,isDirectory:!0}),e(null,r))})})}()}}(t.webkitGetAsEntry(),e)}}),function(t,i){if(t)throw t;var o=r(i),a=o.filter(function(t){return t.isFile}),s=o.filter(function(t){return t.isDirectory});e.onDrop(a,n,f,s)})}return!1}function l(){t.classList.remove("drag")}};var r=n(6),i=n(7);function o(t,e){var n=[];if(t.isFile){t.file(function(n){n.fullPath=t.fullPath;n.isFile=true;n.isDirectory=false;e(null,n)},function(t){e(t)})}else if(t.isDirectory){var r=t.createReader();a()}function a(){r.readEntries(function(t){if(t.length>0){n=n.concat(Array.from(t));a()}else{s()}})}function s(){i(n.map(function(t){return function(e){o(t,e)}}),function(n,r){if(n){e(n)}else{r.push({fullPath:t.fullPath,name:t.name,isFile:false,isDirectory:true});e(null,r)}})}}},function(t,e){t.exports=new class{isFullscreen(){return this.fullscreenElement=document.fullscreenElement,void 0===this.fullscreenElement&&(this.fullscreenElement=document.webkitFullscreenElement),!!this.fullscreenElement}toggle(){if(this.isFullscreen())return this.disableFullscreen();this.enableFullscreen()}enableFullscreen(){if(document.body.requestFullscreen)return document.body.requestFullscreen();document.body.webkitRequestFullScreen()}disableFullscreen(){document.exitFullscreen&&document.exitFullscreen(),document.webkitExitFullscreen()}set(t=document){"string"==typeof t&&(t=document.querySelector(t)),t.addEventListener("dblclick",()=>{this.toggle()})}}},function(t,e,n){"use strict";n.r(e);var r=n(2),i=n.n(r),o=n(3),a=n.n(o),s=n(0),f=n.n(s),u=n(1),c=n(4);n.n(c).a.set();const l=[new u.USpectrumWave,new u.USpectrumHeatmap];let h,d;const p=2e3;let b=0;const g=new i.a("https://play-spectrum.herokuapp.com/deploy.mp3");function m(t){if(f.a.toast&&"none"!==f.a.toast.style.display)return clearTimeout(d),void(d=setTimeout(()=>m(t),100));f.a.show(t,p)}g.debug(!0).on("stop",()=>m("Stop.")).on("pause",()=>m("Pause.")).on("play",()=>{h&&m(`Playing ${h}...`),l[b].init({context:g.context,buffer:g.buffer,source:g.source}).render()}).on("forward",t=>m(`Forward ${t} seconds.`)).on("rewind",t=>m(`Rewind ${t} seconds.`)).useKeyboard().load().play(),m("Drop an audio file to start playing!"),a()("body",function(t){const e=t[0];console.log("GOT FILE:",e),h=e.name;const n=new window.FileReader;n.addEventListener("load",t=>{const e=t.target.result;g.load(e).play()}),n.addEventListener("error",t=>{console.error("FileReader error"+t),f.a.show("Oops! Something went wrong :(")}),n.readAsArrayBuffer(e)}),document.body.addEventListener("keydown",({key:t})=>{if("s"!==t)return;l[b].$canvas.style.display="none",++b>=l.length&&(b=0),l[b].$canvas.style.display="block",console.log("Spectrum Analyzer:",b),l[b].init({context:g.context,buffer:g.buffer,source:g.source}).render()})},function(t,e){t.exports=function(t,e){return(e="number"==typeof e?e:1/0)?function t(n,r){return n.reduce(function(n,i){return Array.isArray(i)&&r<e?n.concat(t(i,r+1)):n.concat(i)},[])}(t,1):Array.isArray(t)?t.map(function(t){return t}):t}},function(t,e,n){(function(e){t.exports=function(t,n){var r,i,o,a=!0;Array.isArray(t)?(r=[],i=t.length):(o=Object.keys(t),r={},i=o.length);function s(t){function i(){n&&n(t,r),n=null}a?e.nextTick(i):i()}function f(t,e,n){r[t]=n,(0==--i||e)&&s(e)}i?o?o.forEach(function(e){t[e](function(t,n){f(e,t,n)})}):t.forEach(function(t,e){t(function(t,n){f(e,t,n)})}):s(null);a=!1}}).call(this,n(8))},function(t,e){var n,r,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var f,u=[],c=!1,l=-1;function h(){c&&f&&(c=!1,f.length?u=f.concat(u):l=-1,u.length&&d())}function d(){if(!c){var t=s(h);c=!0;for(var e=u.length;e;){for(f=u,u=[];++l<e;)f&&f[l].run();l=-1,e=u.length}f=null,c=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function p(t,e){this.fun=t,this.array=e}function b(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new p(t,e)),1!==u.length||c||s(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=b,i.addListener=b,i.once=b,i.off=b,i.removeListener=b,i.removeAllListeners=b,i.emit=b,i.prependListener=b,i.prependOnceListener=b,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e){t.exports=class{constructor({context:t,buffer:e,source:n,canvas:r}={}){"string"==typeof r&&(r=document.getElementById(r)),r||(r=document.createElement("canvas"),document.body.appendChild(r)),this.$canvas=r,this.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,this.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,this.$canvas.width=this.width,this.$canvas.height=this.height,this.canvasContext=this.$canvas.getContext("2d"),this.background="black",this.color="yellow",this.lineWidth=2,this.fftSize=2048,this.minDb=-90,this.maxDb=-10,this.smoothing=.85,t&&e&&n&&this.init({context:t,buffer:e,source:n})}init({context:t,buffer:e,source:n}){return this.analyser=t.createAnalyser(),this.analyser.fftSize=this.fftSize,this.analyser.minDecibels=this.minDb,this.analyser.maxDecibels=this.maxDb,this.analyser.smoothingTimeConstant=this.smoothing,this.analyser.buffer=e,n.connect(this.analyser),this}setFftSize(t){return this.fftSize=t,this}setMinDb(t){return this.minDb=t,this}setMaxDb(t){return this.maxDb=t,this}setSmoothing(t){this.smoothing=t}setBackground(t){return this.background=t,this}setColor(t){return this.color=t,this}setLineWidth(t){return this.lineWidth=t,this}render(){const t=this.analyser.fftSize,e=new Uint8Array(t);window.requestAnimationFrame(()=>this.render()),this.analyser.getByteTimeDomainData(e),this.canvasContext.fillStyle=this.background,this.canvasContext.fillRect(0,0,this.width,this.height),this.canvasContext.lineWidth=this.lineWidth,this.canvasContext.strokeStyle=this.color,this.canvasContext.beginPath();const n=1*this.width/t;let r=0;for(let i=0;i<t;i++){const t=e[i]/128*this.height/2;0===i?this.canvasContext.moveTo(r,t):this.canvasContext.lineTo(r,t),r+=n}this.canvasContext.lineTo(this.$canvas.width,this.$canvas.height/2),this.canvasContext.stroke()}}},function(t,e,n){const r=n(11);window.colors={},t.exports=class{constructor({context:t,buffer:e,source:n,canvas:r}={}){"string"==typeof r&&(r=document.getElementById(r)),r||(r=document.createElement("canvas"),document.body.appendChild(r)),this.$canvas=r,this.canvasContext=this.$canvas.getContext("2d"),this.fftSize=512,this.minDb=-90,this.maxDb=-10,this.smoothing=.82,this.maxValue=0,this.renderRatio=16,this.pointWidth=1,this.pointHeight=1,this.audioMatrix=[],this.resizeThrottle=400,this.setResizer(),this.setSize(),t&&e&&n&&this.init({context:t,buffer:e,source:n})}setSize(){this.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,this.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,this.$canvas.width=this.width,this.$canvas.height=this.height,this.renderWidth=this.width/this.renderRatio;for(var t=0;t<this.renderWidth;t++)this.audioMatrix[t]=new Uint8Array(this.fftSize);const e=this.width/this.renderWidth,n=this.height/this.fftSize*2;this.canvasContext.scale(e,n)}setResizer(){let t=!1;window.addEventListener("resize",()=>{t||(t=!0,setTimeout(()=>{this.setSize(),t=!1},this.resizeThrottle))})}init({context:t,buffer:e,source:n}){return this.analyser=t.createAnalyser(),this.analyser.fftSize=this.fftSize,this.analyser.minDecibels=this.minDb,this.analyser.maxDecibels=this.maxDb,this.analyser.smoothingTimeConstant=this.smoothing,this.analyser.buffer=e,n.connect(this.analyser),this.bufferLength=this.analyser.frequencyBinCount,this.maxFreq=this.bufferLength,this}setFftSize(t){return this.fftSize=t,this}setMinDb(t){return this.minDb=t,this}setMaxDb(t){return this.maxDb=t,this}setSmoothing(t){this.smoothing=t}render(){const t=this.audioMatrix.shift();this.analyser.getByteFrequencyData(t),this.audioMatrix.push(t);for(let t=0;t<this.renderWidth;t++)for(let e=0;e<this.maxFreq;e++){const n=this.audioMatrix[t][this.maxFreq-e];n>this.maxValue&&(this.maxValue=n);const i=r[n];this.canvasContext.fillStyle=i,window.colors[n]=i,this.canvasContext.fillRect(t,e,this.pointWidth,this.pointHeight)}window.requestAnimationFrame(()=>this.render())}}},function(t,e,n){const r=n(12);const i=function(){const t=r.scale(["#000000","#0B16B5","#FFF782","#EB1250"]).domain([0,120,204,255]),e=[];for(let n=0;n<=300;n++)e.push(t(n).hex());return e}();t.exports=i},function(t,e,n){(function(t){var n;
/**
 * @license
 *
 * chroma.js - JavaScript library for color conversions
 * 
 * Copyright (c) 2011-2017, Gregor Aisch
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * 3. The name Gregor Aisch may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/**
 * @license
 *
 * chroma.js - JavaScript library for color conversions
 * 
 * Copyright (c) 2011-2017, Gregor Aisch
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * 3. The name Gregor Aisch may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
(function(){var r,i,o,a,s,f,u,c,l,h,d,p,b,g,m,y,v,w,x,k,L,E,S,_,T,M,A,D,N,O,P,F,j,C,z,q,B,R,W,$,G,Y,H,I,U,V,X,K,Z,J,Q,tt,et,nt,rt,it,ot,at,st,ft,ut,ct,lt,ht,dt,pt,bt,gt,mt,yt,vt,wt,xt,kt,Lt,Et,St,_t,Tt,Mt,At=[].slice;Et=function(){var t,e,n,r,i;for(t={},r=0,e=(i="Boolean Number String Function Array Date RegExp Undefined Null".split(" ")).length;r<e;r++)n=i[r],t["[object "+n+"]"]=n.toLowerCase();return function(e){var n;return n=Object.prototype.toString.call(e),t[n]||"object"}}(),X=function(t,e,n){return null==e&&(e=0),null==n&&(n=1),t<e&&(t=e),t>n&&(t=n),t},St=function(t){return t.length>=3?Array.prototype.slice.call(t):t[0]},L=function(t){var e,n;for(t._clipped=!1,t._unclipped=t.slice(0),e=n=0;n<3;e=++n)e<3?((t[e]<0||t[e]>255)&&(t._clipped=!0),t[e]<0&&(t[e]=0),t[e]>255&&(t[e]=255)):3===e&&(t[e]<0&&(t[e]=0),t[e]>1&&(t[e]=1));return t._clipped||delete t._unclipped,t},a=Math.PI,vt=Math.round,S=Math.cos,D=Math.floor,rt=Math.pow,K=Math.log,xt=Math.sin,kt=Math.sqrt,g=Math.atan2,Q=Math.max,b=Math.abs,u=2*a,s=a/3,i=a/180,f=180/a,(k=function(){return arguments[0]instanceof r?arguments[0]:function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,arguments,function(){})}).default=k,p=[],null!==t&&null!=t.exports&&(t.exports=k),void 0===(n=function(){return k}.apply(e,[]))||(t.exports=n),k.version="1.4.1",d={},l=[],h=!1,r=function(){function t(){var t,e,n,r,i,o,a,s,f;for(o=this,e=[],s=0,r=arguments.length;s<r;s++)null!=(t=arguments[s])&&e.push(t);if(e.length>1&&(a=e[e.length-1]),null!=d[a])o._rgb=L(d[a](St(e.slice(0,-1))));else{for(h||(l=l.sort(function(t,e){return e.p-t.p}),h=!0),f=0,i=l.length;f<i&&!(a=(n=l[f]).test.apply(n,e));f++);a&&(o._rgb=L(d[a].apply(d,e)))}null==o._rgb&&console.warn("unknown format: "+e),null==o._rgb&&(o._rgb=[0,0,0]),3===o._rgb.length&&o._rgb.push(1)}return t.prototype.toString=function(){return this.hex()},t}(),k._input=d,
/**
  	ColorBrewer colors for chroma.js
  
  	Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The 
  	Pennsylvania State University.
  
  	Licensed under the Apache License, Version 2.0 (the "License"); 
  	you may not use this file except in compliance with the License.
  	You may obtain a copy of the License at	
  	http://www.apache.org/licenses/LICENSE-2.0
  
  	Unless required by applicable law or agreed to in writing, software distributed
  	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
  	CONDITIONS OF ANY KIND, either express or implied. See the License for the
  	specific language governing permissions and limitations under the License.
  
      @preserve
   */
k.brewer=w={OrRd:["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"],PuBu:["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"],BuPu:["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"],Oranges:["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"],BuGn:["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],YlOrBr:["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"],YlGn:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],Reds:["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"],RdPu:["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"],Greens:["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],YlGnBu:["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"],Purples:["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"],GnBu:["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"],Greys:["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"],YlOrRd:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],PuRd:["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"],Blues:["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"],PuBuGn:["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"],Viridis:["#440154","#482777","#3f4a8a","#31678e","#26838f","#1f9d8a","#6cce5a","#b6de2b","#fee825"],Spectral:["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],RdYlGn:["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],RdBu:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],PiYG:["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],PRGn:["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],RdYlBu:["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],BrBG:["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],RdGy:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],PuOr:["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],Set2:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],Accent:["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"],Set1:["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"],Set3:["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"],Dark2:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],Paired:["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"],Pastel2:["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"],Pastel1:["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]},function(){var t,e;for(t in e=[],w)e.push(w[t.toLowerCase()]=w[t])}(),k.colors=_t={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflower:"#6495ed",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",laserlemon:"#ffff54",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrod:"#fafad2",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",maroon2:"#7f0000",maroon3:"#b03060",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",purple2:"#7f007f",purple3:"#a020f0",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},Y=function(){var t,e,n,r,i,a,s;return r=(e=St(arguments))[0],t=e[1],n=e[2],a=(r+16)/116,i=isNaN(t)?a:a+t/500,s=isNaN(n)?a:a-n/200,a=o.Yn*H(a),i=o.Xn*H(i),s=o.Zn*H(s),[Mt(3.2404542*i-1.5371385*a-.4985314*s),Mt(-.969266*i+1.8760108*a+.041556*s),n=Mt(.0556434*i-.2040259*a+1.0572252*s),e.length>3?e[3]:1]},Mt=function(t){return 255*(t<=.00304?12.92*t:1.055*rt(t,1/2.4)-.055)},H=function(t){return t>o.t1?t*t*t:o.t2*(t-o.t0)},o={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},lt=function(){var t,e,n,r,i,o,a;return n=(r=St(arguments))[0],e=r[1],t=r[2],o=(i=gt(n,e,t))[0],[116*(a=i[1])-16,500*(o-a),200*(a-i[2])]},mt=function(t){return(t/=255)<=.04045?t/12.92:rt((t+.055)/1.055,2.4)},Tt=function(t){return t>o.t3?rt(t,1/3):t/o.t2+o.t0},gt=function(){var t,e,n,r;return n=(r=St(arguments))[0],e=r[1],t=r[2],n=mt(n),e=mt(e),t=mt(t),[Tt((.4124564*n+.3575761*e+.1804375*t)/o.Xn),Tt((.2126729*n+.7151522*e+.072175*t)/o.Yn),Tt((.0193339*n+.119192*e+.9503041*t)/o.Zn)]},k.lab=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["lab"]),function(){})},d.lab=Y,r.prototype.lab=function(){return lt(this._rgb)},m=function(t){var e,n,r,i,o,a,s,f,u,c,l;return 2===(t=function(){var e,n,r;for(r=[],n=0,e=t.length;n<e;n++)i=t[n],r.push(k(i));return r}()).length?(u=function(){var e,n,r;for(r=[],n=0,e=t.length;n<e;n++)i=t[n],r.push(i.lab());return r}(),o=u[0],a=u[1],e=function(t){var e,n;return n=function(){var n,r;for(r=[],e=n=0;n<=2;e=++n)r.push(o[e]+t*(a[e]-o[e]));return r}(),k.lab.apply(k,n)}):3===t.length?(c=function(){var e,n,r;for(r=[],n=0,e=t.length;n<e;n++)i=t[n],r.push(i.lab());return r}(),o=c[0],a=c[1],s=c[2],e=function(t){var e,n;return n=function(){var n,r;for(r=[],e=n=0;n<=2;e=++n)r.push((1-t)*(1-t)*o[e]+2*(1-t)*t*a[e]+t*t*s[e]);return r}(),k.lab.apply(k,n)}):4===t.length?(l=function(){var e,n,r;for(r=[],n=0,e=t.length;n<e;n++)i=t[n],r.push(i.lab());return r}(),o=l[0],a=l[1],s=l[2],f=l[3],e=function(t){var e,n;return n=function(){var n,r;for(r=[],e=n=0;n<=2;e=++n)r.push((1-t)*(1-t)*(1-t)*o[e]+3*(1-t)*(1-t)*t*a[e]+3*(1-t)*t*t*s[e]+t*t*t*f[e]);return r}(),k.lab.apply(k,n)}):5===t.length&&(n=m(t.slice(0,3)),r=m(t.slice(2,5)),e=function(t){return t<.5?n(2*t):r(2*(t-.5))}),e},k.bezier=function(t){var e;return(e=m(t)).scale=function(){return k.scale(e)},e},k.cubehelix=function(t,e,n,r,i){var o,a,s;return null==t&&(t=300),null==e&&(e=-1.5),null==n&&(n=1),null==r&&(r=1),null==i&&(i=[0,1]),o=0,"array"===Et(i)?a=i[1]-i[0]:(a=0,i=[i,i]),(s=function(s){var f,c,l,h,d;return f=u*((t+120)/360+e*s),h=rt(i[0]+a*s,r),c=(0!==o?n[0]+s*o:n)*h*(1-h)/2,l=S(f),d=xt(f),k(L([255*(h+c*(-.14861*l+1.78277*d)),255*(h+c*(-.29227*l-.90649*d)),255*(h+c*(1.97294*l)),1]))}).start=function(e){return null==e?t:(t=e,s)},s.rotations=function(t){return null==t?e:(e=t,s)},s.gamma=function(t){return null==t?r:(r=t,s)},s.hue=function(t){return null==t?n:("array"===Et(n=t)?0===(o=n[1]-n[0])&&(n=n[1]):o=0,s)},s.lightness=function(t){return null==t?i:("array"===Et(t)?(i=t,a=t[1]-t[0]):(i=[t,t],a=0),s)},s.scale=function(){return k.scale(s)},s.hue(n),s},k.random=function(){var t,e;for("0123456789abcdef",t="#",e=0;e<6;++e)t+="0123456789abcdef".charAt(D(16*Math.random()));return new r(t)},p=[],z=function(t,e,n,r){var i,o,a,s;for(null==n&&(n=.5),null==r&&(r="rgb"),"object"!==Et(t)&&(t=k(t)),"object"!==Et(e)&&(e=k(e)),a=0,o=p.length;a<o;a++)if(r===(i=p[a])[0]){s=i[1](t,e,n,r);break}if(null==s)throw"color mode "+r+" is not supported";return s.alpha(t.alpha()+n*(e.alpha()-t.alpha()))},k.interpolate=z,r.prototype.interpolate=function(t,e,n){return z(this,t,e,n)},k.mix=z,r.prototype.mix=r.prototype.interpolate,d.rgb=function(){var t,e,n,r;for(t in n=[],e=St(arguments))r=e[t],n.push(r);return n},k.rgb=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["rgb"]),function(){})},r.prototype.rgb=function(t){return null==t&&(t=!0),t?this._rgb.map(Math.round).slice(0,3):this._rgb.slice(0,3)},r.prototype.rgba=function(t){return null==t&&(t=!0),t?[Math.round(this._rgb[0]),Math.round(this._rgb[1]),Math.round(this._rgb[2]),this._rgb[3]]:this._rgb.slice(0)},l.push({p:3,test:function(t){var e;return e=St(arguments),"array"===Et(e)&&3===e.length?"rgb":4===e.length&&"number"===Et(e[3])&&e[3]>=0&&e[3]<=1?"rgb":void 0}}),d.lrgb=d.rgb,R=function(t,e,n,i){var o,a;return o=t._rgb,a=e._rgb,new r(kt(rt(o[0],2)*(1-n)+rt(a[0],2)*n),kt(rt(o[1],2)*(1-n)+rt(a[1],2)*n),kt(rt(o[2],2)*(1-n)+rt(a[2],2)*n),i)},c=function(t){var e,n,i,o,a;for(e=1/t.length,a=[0,0,0,0],i=0,n=t.length;i<n;i++)o=t[i]._rgb,a[0]+=rt(o[0],2)*e,a[1]+=rt(o[1],2)*e,a[2]+=rt(o[2],2)*e,a[3]+=o[3]*e;return a[0]=kt(a[0]),a[1]=kt(a[1]),a[2]=kt(a[2]),a[3]>1&&(a[3]=1),new r(L(a))},p.push(["lrgb",R]),k.average=function(t,e){var n,r,i,o,s,f,u,l,h,d,p,b,m;if(null==e&&(e="rgb"),h=t.length,u=(t=t.map(function(t){return k(t)})).splice(0,1)[0],"lrgb"===e)return c(t);for(l in o=[],s=0,f=0,b=u.get(e))b[l]=b[l]||0,o.push(isNaN(b[l])?0:1),"h"!==e.charAt(l)||isNaN(b[l])||(n=b[l]/180*a,s+=S(n),f+=xt(n));for(r=u.alpha(),p=0,d=t.length;p<d;p++)for(l in m=(i=t[p]).get(e),r+=i.alpha(),b)isNaN(m[l])||(o[l]+=1,"h"===e.charAt(l)?(n=m[l]/180*a,s+=S(n),f+=xt(n)):b[l]+=m[l]);for(l in b)if("h"===e.charAt(l)){for(n=g(f/o[l],s/o[l])/a*180;n<0;)n+=360;for(;n>=360;)n-=360;b[l]=n}else b[l]=b[l]/o[l];return k(b,e).alpha(r/h)},O=function(t){var e,n;if(t.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/))return 4!==t.length&&7!==t.length||(t=t.substr(1)),3===t.length&&(t=(t=t.split(""))[0]+t[0]+t[1]+t[1]+t[2]+t[2]),[(n=parseInt(t,16))>>16,n>>8&255,255&n,1];if(t.match(/^#?([A-Fa-f0-9]{8})$/))return 9===t.length&&(t=t.substr(1)),[(n=parseInt(t,16))>>24&255,n>>16&255,n>>8&255,vt((255&n)/255*100)/100];if(null!=d.css&&(e=d.css(t)))return e;throw"unknown color: "+t},st=function(t,e){var n,r,i,o,a,s;return null==e&&(e="auto"),a=t[0],i=t[1],r=t[2],n=t[3],"auto"===e&&(e=n<1?"rgba":"rgb"),a=Math.round(a),i=Math.round(i),r=Math.round(r),s=(s="000000"+(a<<16|i<<8|r).toString(16)).substr(s.length-6),o=(o="0"+vt(255*n).toString(16)).substr(o.length-2),"#"+function(){switch(e.toLowerCase()){case"rgba":return s+o;case"argb":return o+s;default:return s}}()},d.hex=function(t){return O(t)},k.hex=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["hex"]),function(){})},r.prototype.hex=function(t){return null==t&&(t="auto"),st(this._rgb,t)},l.push({p:4,test:function(t){if(1===arguments.length&&"string"===Et(t))return"hex"}}),j=function(){var t,e,n,r,i,o,a,s,f,u,c,l,h,d;if(i=(t=St(arguments))[0],c=t[1],a=t[2],0===c)f=r=e=255*a;else{for(n=[0,0,0],l=2*a-(h=a<.5?a*(1+c):a+c-a*c),(d=[0,0,0])[0]=(i/=360)+1/3,d[1]=i,d[2]=i-1/3,o=s=0;s<=2;o=++s)d[o]<0&&(d[o]+=1),d[o]>1&&(d[o]-=1),6*d[o]<1?n[o]=l+6*(h-l)*d[o]:2*d[o]<1?n[o]=h:3*d[o]<2?n[o]=l+(h-l)*(2/3-d[o])*6:n[o]=l;f=(u=[vt(255*n[0]),vt(255*n[1]),vt(255*n[2])])[0],r=u[1],e=u[2]}return t.length>3?[f,r,e,t[3]]:[f,r,e]},ut=function(t,e,n){var r,i,o,a,s;return void 0!==t&&t.length>=3&&(t=(a=t)[0],e=a[1],n=a[2]),t/=255,e/=255,n/=255,o=Math.min(t,e,n),i=((Q=Math.max(t,e,n))+o)/2,Q===o?(s=0,r=Number.NaN):s=i<.5?(Q-o)/(Q+o):(Q-o)/(2-Q-o),t===Q?r=(e-n)/(Q-o):e===Q?r=2+(n-t)/(Q-o):n===Q&&(r=4+(t-e)/(Q-o)),(r*=60)<0&&(r+=360),[r,s,i]},k.hsl=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["hsl"]),function(){})},d.hsl=j,r.prototype.hsl=function(){return ut(this._rgb)},C=function(){var t,e,n,r,i,o,a,s,f,u,c,l,h,d,p,b,g,m;if(i=(t=St(arguments))[0],b=t[1],m=t[2],m*=255,0===b)f=r=e=m;else switch(360===i&&(i=0),i>360&&(i-=360),i<0&&(i+=360),a=m*(1-b),s=m*(1-b*(n=(i/=60)-(o=D(i)))),g=m*(1-b*(1-n)),o){case 0:f=(u=[m,g,a])[0],r=u[1],e=u[2];break;case 1:f=(c=[s,m,a])[0],r=c[1],e=c[2];break;case 2:f=(l=[a,m,g])[0],r=l[1],e=l[2];break;case 3:f=(h=[a,s,m])[0],r=h[1],e=h[2];break;case 4:f=(d=[g,a,m])[0],r=d[1],e=d[2];break;case 5:f=(p=[m,a,s])[0],r=p[1],e=p[2]}return[f,r,e,t.length>3?t[3]:1]},ct=function(){var t,e,n,r,i,o,a,s,f;return o=(a=St(arguments))[0],n=a[1],t=a[2],i=Math.min(o,n,t),e=(Q=Math.max(o,n,t))-i,f=Q/255,0===Q?(r=Number.NaN,s=0):(s=e/Q,o===Q&&(r=(n-t)/e),n===Q&&(r=2+(t-o)/e),t===Q&&(r=4+(o-n)/e),(r*=60)<0&&(r+=360)),[r,s,f]},k.hsv=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["hsv"]),function(){})},d.hsv=C,r.prototype.hsv=function(){return ct(this._rgb)},et=function(t){return"number"===Et(t)&&t>=0&&t<=16777215?[t>>16,t>>8&255,255&t,1]:(console.warn("unknown num color: "+t),[0,0,0,1])},pt=function(){var t;return((t=St(arguments))[0]<<16)+(t[1]<<8)+t[2]},k.num=function(t){return new r(t,"num")},r.prototype.num=function(t){return null==t&&(t="rgb"),pt(this._rgb,t)},d.num=et,l.push({p:1,test:function(t){if(1===arguments.length&&"number"===Et(t)&&t>=0&&t<=16777215)return"num"}}),N=function(){var t,e,n,r,i,o,a,s,f,u,c,l,h,d,p,b,g,m,y,v;if(s=(n=St(arguments))[0],i=n[1],e=n[2],a=a/100*255,t=255*(i/=100),0===i)l=a=r=e;else switch(360===s&&(s=0),s>360&&(s-=360),s<0&&(s+=360),c=(u=e*(1-i))+t*(1-(o=(s/=60)-(f=D(s)))),y=u+t*o,v=u+t,f){case 0:l=(h=[v,y,u])[0],a=h[1],r=h[2];break;case 1:l=(d=[c,v,u])[0],a=d[1],r=d[2];break;case 2:l=(p=[u,v,y])[0],a=p[1],r=p[2];break;case 3:l=(b=[u,c,v])[0],a=b[1],r=b[2];break;case 4:l=(g=[y,u,v])[0],a=g[1],r=g[2];break;case 5:l=(m=[v,u,c])[0],a=m[1],r=m[2]}return[l,a,r,n.length>3?n[3]:1]},at=function(){var t,e,n,r,i,o,a,s,f;return s=(f=St(arguments))[0],i=f[1],e=f[2],a=Math.min(s,i,e),n=100*(r=(Q=Math.max(s,i,e))-a)/255,t=a/(255-r)*100,0===r?o=Number.NaN:(s===Q&&(o=(i-e)/r),i===Q&&(o=2+(e-s)/r),e===Q&&(o=4+(s-i)/r),(o*=60)<0&&(o+=360)),[o,n,t]},k.hcg=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["hcg"]),function(){})},d.hcg=N,r.prototype.hcg=function(){return at(this._rgb)},_=function(t){var e,n,r,i,o,a,s,f;if(t=t.toLowerCase(),null!=k.colors&&k.colors[t])return O(k.colors[t]);if(o=t.match(/rgb\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*\)/)){for(s=o.slice(1,4),i=a=0;a<=2;i=++a)s[i]=+s[i];s[3]=1}else if(o=t.match(/rgba\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*,\s*([01]|[01]?\.\d+)\)/))for(s=o.slice(1,5),i=f=0;f<=3;i=++f)s[i]=+s[i];else if(o=t.match(/rgb\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)){for(s=o.slice(1,4),i=e=0;e<=2;i=++e)s[i]=vt(2.55*s[i]);s[3]=1}else if(o=t.match(/rgba\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)){for(s=o.slice(1,5),i=n=0;n<=2;i=++n)s[i]=vt(2.55*s[i]);s[3]=+s[3]}else(o=t.match(/hsl\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/))?((r=o.slice(1,4))[1]*=.01,r[2]*=.01,(s=j(r))[3]=1):(o=t.match(/hsla\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/))&&((r=o.slice(1,4))[1]*=.01,r[2]*=.01,(s=j(r))[3]=+o[4]);return s},ot=function(t){var e;return"rgb"===(e=t[3]<1?"rgba":"rgb")?e+"("+t.slice(0,3).map(vt).join(",")+")":"rgba"===e?e+"("+t.slice(0,3).map(vt).join(",")+","+t[3]+")":void 0},yt=function(t){return vt(100*t)/100},F=function(t,e){var n;return n=e<1?"hsla":"hsl",t[0]=yt(t[0]||0),t[1]=yt(100*t[1])+"%",t[2]=yt(100*t[2])+"%","hsla"===n&&(t[3]=e),n+"("+t.join(",")+")"},d.css=function(t){return _(t)},k.css=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["css"]),function(){})},r.prototype.css=function(t){return null==t&&(t="rgb"),"rgb"===t.slice(0,3)?ot(this._rgb):"hsl"===t.slice(0,3)?F(this.hsl(),this.alpha()):void 0},d.named=function(t){return O(_t[t])},l.push({p:5,test:function(t){if(1===arguments.length&&null!=_t[t])return"named"}}),r.prototype.name=function(t){var e,n;for(n in arguments.length&&(_t[t]&&(this._rgb=O(_t[t])),this._rgb[3]=1),e=this.hex("rgb"),_t)if(e===_t[n])return n;return e},I=function(){var t,e,n,r;return n=(r=St(arguments))[0],t=r[1],e=r[2],[n,S(e*=i)*t,xt(e)*t]},U=function(){var t,e,n,r,i,o,a,s,f;return a=(n=St(arguments))[0],i=n[1],o=n[2],t=(s=I(a,i,o))[0],e=s[1],r=s[2],[(f=Y(t,e,r))[0],f[1],r=f[2],n.length>3?n[3]:1]},G=function(){var t,e,n,r,i,o;return i=(o=St(arguments))[0],t=o[1],e=o[2],n=kt(t*t+e*e),r=(g(e,t)*f+360)%360,0===vt(1e4*n)&&(r=Number.NaN),[i,n,r]},ht=function(){var t,e,n,r,i,o,a;return i=(o=St(arguments))[0],n=o[1],e=o[2],r=(a=lt(i,n,e))[0],t=a[1],e=a[2],G(r,t,e)},k.lch=function(){var t;return t=St(arguments),new r(t,"lch")},k.hcl=function(){var t;return t=St(arguments),new r(t,"hcl")},d.lch=U,d.hcl=function(){var t,e,n,r;return e=(r=St(arguments))[0],t=r[1],n=r[2],U([n,t,e])},r.prototype.lch=function(){return ht(this._rgb)},r.prototype.hcl=function(){return ht(this._rgb).reverse()},it=function(t){var e,n,r,i,o,a;return null==t&&(t="rgb"),o=(a=St(arguments))[0],r=a[1],e=a[2],r/=255,e/=255,[(1-(o/=255)-(i=1-Math.max(o,Math.max(r,e))))*(n=i<1?1/(1-i):0),(1-r-i)*n,(1-e-i)*n,i]},E=function(){var t,e,n,r,i,o;return n=(e=St(arguments))[0],i=e[1],o=e[2],r=e[3],t=e.length>4?e[4]:1,1===r?[0,0,0,t]:[n>=1?0:255*(1-n)*(1-r),i>=1?0:255*(1-i)*(1-r),o>=1?0:255*(1-o)*(1-r),t]},d.cmyk=function(){return E(St(arguments))},k.cmyk=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["cmyk"]),function(){})},r.prototype.cmyk=function(){return it(this._rgb)},d.gl=function(){var t,e,n,r,i;for(r=function(){var t,n;for(e in n=[],t=St(arguments))i=t[e],n.push(i);return n}.apply(this,arguments),t=n=0;n<=2;t=++n)r[t]*=255;return r},k.gl=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["gl"]),function(){})},r.prototype.gl=function(){var t;return[(t=this._rgb)[0]/255,t[1]/255,t[2]/255,t[3]]},dt=function(t,e,n){var r;return t=(r=St(arguments))[0],e=r[1],n=r[2],.2126*(t=Z(t))+.7152*(e=Z(e))+.0722*(n=Z(n))},Z=function(t){return(t/=255)<=.03928?t/12.92:rt((t+.055)/1.055,2.4)},$=function(t,e,n,i){var o,a;return o=t._rgb,a=e._rgb,new r(o[0]+n*(a[0]-o[0]),o[1]+n*(a[1]-o[1]),o[2]+n*(a[2]-o[2]),i)},p.push(["rgb",$]),r.prototype.luminance=function(t,e){var n,r,i,o;return null==e&&(e="rgb"),arguments.length?(i=this._rgb,0===t?i=[0,0,0,this._rgb[3]]:1===t?i=[255,255,255,this[3]]:(n=dt(this._rgb),1e-7,r=20,o=function(n,i){var a,s;return a=(s=n.interpolate(i,.5,e)).luminance(),Math.abs(t-a)<1e-7||!r--?s:a>t?o(n,s):o(s,i)},i=n>t?o(k("black"),this).rgba():o(this,k("white")).rgba()),k(i).alpha(this.alpha())):dt(this._rgb)},Lt=function(t){var e,n,r,i;return(i=t/100)<66?(r=255,n=-155.25485562709179-.44596950469579133*(n=i-2)+104.49216199393888*K(n),e=i<20?0:.8274096064007395*(e=i-10)-254.76935184120902+115.67994401066147*K(e)):(r=351.97690566805693+.114206453784165*(r=i-55)-40.25366309332127*K(r),n=325.4494125711974+.07943456536662342*(n=i-50)-28.0852963507957*K(n),e=255),[r,n,e]},bt=function(){var t,e,n,r,i,o,a;for(r=(i=St(arguments))[0],i[1],t=i[2],n=1e3,e=4e4,.4;e-n>.4;)(o=Lt(a=.5*(e+n)))[2]/o[0]>=t/r?e=a:n=a;return vt(a)},k.temperature=k.kelvin=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["temperature"]),function(){})},d.temperature=d.kelvin=d.K=Lt,r.prototype.temperature=function(){return bt(this._rgb)},r.prototype.kelvin=r.prototype.temperature,k.contrast=function(t,e){var n,i,o,a;return"string"!==(o=Et(t))&&"number"!==o||(t=new r(t)),"string"!==(a=Et(e))&&"number"!==a||(e=new r(e)),(n=t.luminance())>(i=e.luminance())?(n+.05)/(i+.05):(i+.05)/(n+.05)},k.distance=function(t,e,n){var i,o,a,s,f,u,c;for(o in null==n&&(n="lab"),"string"!==(f=Et(t))&&"number"!==f||(t=new r(t)),"string"!==(u=Et(e))&&"number"!==u||(e=new r(e)),a=t.get(n),s=e.get(n),c=0,a)c+=(i=(a[o]||0)-(s[o]||0))*i;return Math.sqrt(c)},k.deltaE=function(t,e,n,i){var o,s,f,u,c,l,h,d,p,m,y,v,w,x,k,L,E,_,T,M,A,D,N,O;for(null==n&&(n=1),null==i&&(i=1),"string"!==(k=Et(t))&&"number"!==k||(t=new r(t)),"string"!==(L=Et(e))&&"number"!==L||(e=new r(e)),o=(E=t.lab())[0],f=E[1],c=E[2],s=(_=e.lab())[0],u=_[1],l=_[2],h=kt(f*f+c*c),d=kt(u*u+l*l),M=o<16?.511:.040975*o/(1+.01765*o),T=.0638*h/(1+.0131*h)+.638,x=h<1e-6?0:180*g(c,f)/a;x<0;)x+=360;for(;x>=360;)x-=360;return A=x>=164&&x<=345?.56+b(.2*S(a*(x+168)/180)):.36+b(.4*S(a*(x+35)/180)),w=kt((p=h*h*h*h)/(p+1900)),kt((D=(o-s)/(n*M))*D+(N=(v=h-d)/(i*T))*N+((m=f-u)*m+(y=c-l)*y-v*v)/((O=T*(w*A+1-w))*O))},r.prototype.get=function(t){var e,n,r,i,o;return this,r=(i=t.split("."))[0],e=i[1],o=this[r](),e?(n=r.indexOf(e))>-1?o[n]:console.warn("unknown channel "+e+" in mode "+r):o},r.prototype.set=function(t,e){var n,r,i,o,a;if(this,i=(o=t.split("."))[0],n=o[1])if(a=this[i](),(r=i.indexOf(n))>-1)if("string"===Et(e))switch(e.charAt(0)){case"+":case"-":a[r]+=+e;break;case"*":a[r]*=+e.substr(1);break;case"/":a[r]/=+e.substr(1);break;default:a[r]=+e}else a[r]=e;else console.warn("unknown channel "+n+" in mode "+i);else a=e;return k(a,i).alpha(this.alpha())},r.prototype.clipped=function(){return this._rgb._clipped||!1},r.prototype.alpha=function(t){return arguments.length?k.rgb([this._rgb[0],this._rgb[1],this._rgb[2],t]):this._rgb[3]},r.prototype.darken=function(t){var e;return null==t&&(t=1),this,(e=this.lab())[0]-=o.Kn*t,k.lab(e).alpha(this.alpha())},r.prototype.brighten=function(t){return null==t&&(t=1),this.darken(-t)},r.prototype.darker=r.prototype.darken,r.prototype.brighter=r.prototype.brighten,r.prototype.saturate=function(t){var e;return null==t&&(t=1),this,(e=this.lch())[1]+=t*o.Kn,e[1]<0&&(e[1]=0),k.lch(e).alpha(this.alpha())},r.prototype.desaturate=function(t){return null==t&&(t=1),this.saturate(-t)},r.prototype.premultiply=function(){var t,e;return e=this.rgb(),t=this.alpha(),k(e[0]*t,e[1]*t,e[2]*t,t)},tt=function(t,e){return t*e/255},T=function(t,e){return t>e?e:t},V=function(t,e){return t>e?t:e},wt=function(t,e){return 255*(1-(1-t/255)*(1-e/255))},nt=function(t,e){return e<128?2*t*e/255:255*(1-2*(1-t/255)*(1-e/255))},x=function(t,e){return 255*(1-(1-e/255)/(t/255))},M=function(t,e){return 255===t?255:(t=e/255*255/(1-t/255))>255?255:t},(y=function(t,e,n){if(!y[n])throw"unknown blend mode "+n;return y[n](t,e)}).normal=(v=function(t){return function(e,n){var r,i;return r=k(n).rgb(),i=k(e).rgb(),k(t(r,i),"rgb")}})((A=function(t){return function(e,n){var r,i,o;for(o=[],r=i=0;i<=3;r=++i)o[r]=t(e[r],n[r]);return o}})(function(t,e){return t})),y.multiply=v(A(tt)),y.screen=v(A(wt)),y.overlay=v(A(nt)),y.darken=v(A(T)),y.lighten=v(A(V)),y.dodge=v(A(M)),y.burn=v(A(x)),k.blend=y,k.analyze=function(t){var e,n,r,i;for(r={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},n=0,e=t.length;n<e;n++)null==(i=t[n])||isNaN(i)||(r.values.push(i),r.sum+=i,i<r.min&&(r.min=i),i>r.max&&(r.max=i),r.count+=1);return r.domain=[r.min,r.max],r.limits=function(t,e){return k.limits(r,t,e)},r},k.scale=function(t,e){var n,r,i,o,a,s,f,u,c,l,h,d,p,b,g,m,y,v,w,x,L;return c="rgb",l=k("#ccc"),b=0,!1,a=[0,1],p=[],d=[0,0],n=!1,i=[],h=!1,u=0,f=1,o=!1,r={},g=!0,s=1,x=function(t){var e,n,r,o,a,s;if(null==t&&(t=["#fff","#000"]),null!=t&&"string"===Et(t)&&null!=k.brewer&&(t=k.brewer[t]||k.brewer[t.toLowerCase()]||t),"array"===Et(t)){for(1===t.length&&(t=[t[0],t[0]]),e=r=0,o=(t=t.slice(0)).length-1;0<=o?r<=o:r>=o;e=0<=o?++r:--r)n=t[e],"string"===Et(n)&&(t[e]=k(n));for(p.length=0,e=s=0,a=t.length-1;0<=a?s<=a:s>=a;e=0<=a?++s:--s)p.push(e/(t.length-1))}return w(),i=t},y=function(t){var e,r;if(null!=n){for(r=n.length-1,e=0;e<r&&t>=n[e];)e++;return e-1}return 0},L=function(t){return t},function(t){var e,r,i,o,a;return a=t,n.length>2&&(o=n.length-1,e=y(t),i=n[0]+(n[1]-n[0])*(0+.5*b),r=n[o-1]+(n[o]-n[o-1])*(1-.5*b),a=u+(n[e]+.5*(n[e+1]-n[e])-i)/(r-i)*(f-u)),a},v=function(t,e){var o,a,h,b,m,v,w;if(null==e&&(e=!1),isNaN(t)||null===t)return l;if(w=e?t:n&&n.length>2?y(t)/(n.length-2):f!==u?(t-u)/(f-u):1,e||(w=L(w)),1!==s&&(w=rt(w,s)),w=d[0]+w*(1-d[0]-d[1]),w=Math.min(1,Math.max(0,w)),h=Math.floor(1e4*w),g&&r[h])o=r[h];else{if("array"===Et(i))for(a=b=0,v=p.length-1;0<=v?b<=v:b>=v;a=0<=v?++b:--b){if(w<=(m=p[a])){o=i[a];break}if(w>=m&&a===p.length-1){o=i[a];break}if(w>m&&w<p[a+1]){w=(w-m)/(p[a+1]-m),o=k.interpolate(i[a],i[a+1],w,c);break}}else"function"===Et(i)&&(o=i(w));g&&(r[h]=o)}return o},w=function(){return r={}},x(t),(m=function(t){var e;return e=k(v(t)),h&&e[h]?e[h]():e}).classes=function(t){var e;return null!=t?("array"===Et(t)?(n=t,a=[t[0],t[t.length-1]]):(e=k.analyze(a),n=0===t?[e.min,e.max]:k.limits(e,"e",t)),m):n},m.domain=function(t){var e,n,r,o,s,c,l;if(!arguments.length)return a;if(u=t[0],f=t[t.length-1],p=[],r=i.length,t.length===r&&u!==f)for(s=0,o=t.length;s<o;s++)n=t[s],p.push((n-u)/(f-u));else for(e=l=0,c=r-1;0<=c?l<=c:l>=c;e=0<=c?++l:--l)p.push(e/(r-1));return a=[u,f],m},m.mode=function(t){return arguments.length?(c=t,w(),m):c},m.range=function(t,e){return x(t),m},m.out=function(t){return h=t,m},m.spread=function(t){return arguments.length?(b=t,m):b},m.correctLightness=function(t){return null==t&&(t=!0),o=t,w(),L=o?function(t){var e,n,r,i,o,a,s,f,u;for(e=v(0,!0).lab()[0],n=v(1,!0).lab()[0],s=e>n,r=v(t,!0).lab()[0],i=r-(o=e+(n-e)*t),f=0,u=1,a=20;Math.abs(i)>.01&&a-- >0;)s&&(i*=-1),i<0?(f=t,t+=.5*(u-t)):(u=t,t+=.5*(f-t)),r=v(t,!0).lab()[0],i=r-o;return t}:function(t){return t},m},m.padding=function(t){return null!=t?("number"===Et(t)&&(t=[t,t]),d=t,m):d},m.colors=function(e,r){var o,s,f,u,c,l,h,d;if(arguments.length<2&&(r="hex"),c=[],0===arguments.length)c=i.slice(0);else if(1===e)c=[m(.5)];else if(e>1)s=a[0],o=a[1]-s,c=function(){l=[];for(var t=0;0<=e?t<e:t>e;0<=e?t++:t--)l.push(t);return l}.apply(this).map(function(t){return m(s+t/(e-1)*o)});else{if(t=[],h=[],n&&n.length>2)for(f=d=1,u=n.length;1<=u?d<u:d>u;f=1<=u?++d:--d)h.push(.5*(n[f-1]+n[f]));else h=a;c=h.map(function(t){return m(t)})}return k[r]&&(c=c.map(function(t){return t[r]()})),c},m.cache=function(t){return null!=t?(g=t,m):g},m.gamma=function(t){return null!=t?(s=t,m):s},m.nodata=function(t){return null!=t?(l=k(t),m):l},m},null==k.scales&&(k.scales={}),k.scales.cool=function(){return k.scale([k.hsl(180,1,.9),k.hsl(250,.7,.4)])},k.scales.hot=function(){return k.scale(["#000","#f00","#ff0","#fff"],[0,.25,.75,1]).mode("rgb")},k.analyze=function(t,e,n){var r,i,o,a,s,f;if(s={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},null==n&&(n=function(){return!0}),r=function(t){null==t||isNaN(t)||(s.values.push(t),s.sum+=t,t<s.min&&(s.min=t),t>s.max&&(s.max=t),s.count+=1)},f=function(t,i){if(n(t,i))return null!=e&&"function"===Et(e)?r(e(t)):null!=e&&"string"===Et(e)||"number"===Et(e)?r(t[e]):r(t)},"array"===Et(t))for(a=0,o=t.length;a<o;a++)f(t[a]);else for(i in t)f(t[i],i);return s.domain=[s.min,s.max],s.limits=function(t,e){return k.limits(s,t,e)},s},k.limits=function(t,e,n){var r,i,o,a,s,f,u,c,l,h,d,p,g,m,y,v,w,x,L,E,S,_,T,M,A,N,O,P,F,j,C,z,q,B,R,W,$,G,Y,H,I,U,V,X,Z,J,tt,et,nt,it,ot,at,st,ft,ut;if(null==e&&(e="equal"),null==n&&(n=7),"array"===Et(t)&&(t=k.analyze(t)),A=t.min,Q=t.max,t.sum,ft=t.values.sort(function(t,e){return t-e}),1===n)return[A,Q];if(T=[],"c"===e.substr(0,1)&&(T.push(A),T.push(Q)),"e"===e.substr(0,1)){for(T.push(A),E=C=1,R=n-1;1<=R?C<=R:C>=R;E=1<=R?++C:--C)T.push(A+E/n*(Q-A));T.push(Q)}else if("l"===e.substr(0,1)){if(A<=0)throw"Logarithmic scales are only possible for values > 0";for(N=Math.LOG10E*K(A),M=Math.LOG10E*K(Q),T.push(A),E=ut=1,W=n-1;1<=W?ut<=W:ut>=W;E=1<=W?++ut:--ut)T.push(rt(10,N+E/n*(M-N)));T.push(Q)}else if("q"===e.substr(0,1)){for(T.push(A),E=r=1,U=n-1;1<=U?r<=U:r>=U;E=1<=U?++r:--r)z=(ft.length-1)*E/n,(q=D(z))===z?T.push(ft[q]):(B=z-q,T.push(ft[q]*(1-B)+ft[q+1]*B));T.push(Q)}else if("k"===e.substr(0,1)){for(P=ft.length,m=new Array(P),x=new Array(n),it=!0,F=0,v=null,(v=[]).push(A),E=i=1,V=n-1;1<=V?i<=V:i>=V;E=1<=V?++i:--i)v.push(A+E/n*(Q-A));for(v.push(Q);it;){for(S=o=0,X=n-1;0<=X?o<=X:o>=X;S=0<=X?++o:--o)x[S]=0;for(E=a=0,Z=P-1;0<=Z?a<=Z:a>=Z;E=0<=Z?++a:--a){for(st=ft[E],O=Number.MAX_VALUE,S=s=0,J=n-1;0<=J?s<=J:s>=J;S=0<=J?++s:--s)(L=b(v[S]-st))<O&&(O=L,y=S);x[y]++,m[E]=y}for(j=new Array(n),S=f=0,tt=n-1;0<=tt?f<=tt:f>=tt;S=0<=tt?++f:--f)j[S]=null;for(E=u=0,et=P-1;0<=et?u<=et:u>=et;E=0<=et?++u:--u)null===j[w=m[E]]?j[w]=ft[E]:j[w]+=ft[E];for(S=c=0,nt=n-1;0<=nt?c<=nt:c>=nt;S=0<=nt?++c:--c)j[S]*=1/x[S];for(it=!1,S=l=0,$=n-1;0<=$?l<=$:l>=$;S=0<=$?++l:--l)if(j[S]!==v[E]){it=!0;break}v=j,++F>200&&(it=!1)}for(_={},S=h=0,G=n-1;0<=G?h<=G:h>=G;S=0<=G?++h:--h)_[S]=[];for(E=d=0,Y=P-1;0<=Y?d<=Y:d>=Y;E=0<=Y?++d:--d)_[w=m[E]].push(ft[E]);for(ot=[],S=p=0,H=n-1;0<=H?p<=H:p>=H;S=0<=H?++p:--p)ot.push(_[S][0]),ot.push(_[S][_[S].length-1]);for(ot=ot.sort(function(t,e){return t-e}),T.push(ot[0]),E=g=1,I=ot.length-1;g<=I;E=g+=2)at=ot[E],isNaN(at)||-1!==T.indexOf(at)||T.push(at)}return T},P=function(t,e,n){var r,i,o,a;return t=(r=St(arguments))[0],e=r[1],n=r[2],isNaN(t)&&(t=0),(t/=360)<1/3?o=1-((i=(1-e)/3)+(a=(1+e*S(u*t)/S(s-u*t))/3)):t<2/3?i=1-((a=(1-e)/3)+(o=(1+e*S(u*(t-=1/3))/S(s-u*t))/3)):a=1-((o=(1-e)/3)+(i=(1+e*S(u*(t-=2/3))/S(s-u*t))/3)),[255*(a=X(n*a*3)),255*(o=X(n*o*3)),255*(i=X(n*i*3)),r.length>3?r[3]:1]},ft=function(){var t,e,n,r,i,o,a;return i=(o=St(arguments))[0],e=o[1],t=o[2],u=2*Math.PI,i/=255,e/=255,t/=255,0===(a=1-Math.min(i,e,t)/(r=(i+e+t)/3))?n=0:(n=(i-e+(i-t))/2,n/=Math.sqrt((i-e)*(i-e)+(i-t)*(e-t)),n=Math.acos(n),t>e&&(n=u-n),n/=u),[360*n,a,r]},k.hsi=function(){return function(t,e,n){n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return Object(i)===i?i:r}(r,At.call(arguments).concat(["hsi"]),function(){})},d.hsi=P,r.prototype.hsi=function(){return ft(this._rgb)},q=function(t,e,n,r){var i,o,a,s,f,u,c,l,h,d;return"hsl"===r?(h=t.hsl(),d=e.hsl()):"hsv"===r?(h=t.hsv(),d=e.hsv()):"hcg"===r?(h=t.hcg(),d=e.hcg()):"hsi"===r?(h=t.hsi(),d=e.hsi()):"lch"!==r&&"hcl"!==r||(r="hcl",h=t.hcl(),d=e.hcl()),"h"===r.substr(0,1)&&(o=h[0],c=h[1],s=h[2],a=d[0],l=d[1],f=d[2]),isNaN(o)||isNaN(a)?isNaN(o)?isNaN(a)?i=Number.NaN:(i=a,1!==s&&0!==s||"hsv"===r||(u=l)):(i=o,1!==f&&0!==f||"hsv"===r||(u=c)):i=o+n*(a>o&&a-o>180?a-(o+360):a<o&&o-a>180?a+360-o:a-o),null==u&&(u=c+n*(l-c)),k[r](i,u,s+n*(f-s))},W=function(t,e,n,r){var i,o;return i=t.num(),o=e.num(),k.num(i+(o-i)*n,"num")},(p=p.concat(function(){var t,e,n,r;for(r=[],e=0,t=(n=["hsv","hsl","hsi","hcl","lch","hcg"]).length;e<t;e++)J=n[e],r.push([J,q]);return r}())).push(["num",W]),B=function(t,e,n,i){var o,a;return o=t.lab(),a=e.lab(),new r(o[0]+n*(a[0]-o[0]),o[1]+n*(a[1]-o[1]),o[2]+n*(a[2]-o[2]),i)},p.push(["lab",B])}).call(this)}).call(this,n(13)(t))},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,